swagger: "2.0"
info:
  description: "Shopping Cart by Maxi Ulibarrie"
  version: "1.0.0"
  title: "Shopping Cart Bootcamp"
host: "shopping-cart.com"
basePath: "/"
tags:
- name: "product"
  description: "Access to individual product operations"
- name: "products"
  description: "Access to all products operations"
schemes:
- "https"
- "http"
paths:
  /product:
    post:
      tags:
      - "product"
      summary: "Add a new product to the cart"
      description: ""
      operationId: "addToCart"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the cart"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        405:
          description: "Invalid input"
      security:
      - shoppingcart_auth:
        - "write:products"
        - "read:products"
  /product/{productId}:
    get:
      tags:
      - "product"
      summary: "Find product by ID"
      description: "Returns a single product"
      operationId: "getProductById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of product to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      security:
      - api_key: []
    post:
      tags:
      - "product"
      summary: "Updates a product in the cart with form data"
      description: ""
      operationId: "addProductById"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of product that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the product"
        required: false
        type: "string"
      - name: "price"
        in: "formData"
        description: "Updated price of the product"
        required: false
        type: "number"
      responses:
        405:
          description: "Invalid input"
      security:
      - shoppingcart_auth:
        - "write:products"
        - "read:products"
    delete:
      tags:
      - "product"
      summary: "Delete a product"
      description: ""
      operationId: "deleteProduct"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "productId"
        in: "path"
        description: "Productt id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      security:
      - shoppingcart_auth:
        - "write:products"
        - "read:products"
  /products:
    get:
      tags:
      - "products"
      summary: "Get all products in the cart"
      description: "Returns all products in the cart"
      operationId: "getAllProducts"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Products not found"
      security:
      - api_key: []
    delete:
      tags:
      - "products"
      summary: "Delete all products from the cart"
      description: ""
      operationId: "clearCart"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Products not found"
      security:
      - shoppingcart_auth:
        - "write:products"
        - "read:products"
  /total:
    get:
      tags:
      - "product"
      summary: "Show total price of the cart"
      description: "Returns the total price of the cart"
      operationId: "getTotalPrice"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "number"
            format: "double"
            example: 300
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      security:
      - api_key: []
securityDefinitions:
  shoppingcart_auth:
    type: "oauth2"
    authorizationUrl: "http://shopping-cart-auth.io/auth-service" 
    flow: "implicit"
    scopes:
      write:products: "modify products in your account"
      read:products: "read your products"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Product:
    type: "object"
    required: 
    - "name"
    - "price"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "flour 500 gr"
      price:
        type: "number"
        format: "double"
        example: 25
    xml:
      name: "Product"