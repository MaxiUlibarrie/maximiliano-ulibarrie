swagger: "2.0"
info:
  description: "Shopping Cart by Maxi Ulibarrie"
  version: "1.0.0"
  title: "Shopping Cart Bootcamp"
host: "shopping-cart.com"
basePath: "/"
tags:
- name: "item"
  description: "Access to all items operations"
- name: "product"
  description: "Access to all product operations"
schemes:
- "https"
- "http"
paths:
  /product:
    post:
      tags:
      - "product"
      summary: "Add a new product to the cart"
      description: ""
      operationId: "addToCart"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the cart"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
      security:
      - shoppingcart_auth:
        - "write:products"
        - "read:products"
  /item/{productId}:
    get:
      tags:
      - "item"
      summary: "Find item by product ID"
      description: "Returns a single item"
      operationId: "getItemById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of product to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Item"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Item not found"
      security:
      - api_key: []
    delete:
      tags:
      - "item"
      summary: "Delete a item from the cart"
      description: ""
      operationId: "deleteItemById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "productId"
        in: "path"
        description: "Item-Product id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Item not found"
      security:
      - shoppingcart_auth:
        - "write:products"
        - "read:products"
  /items:
    get:
      tags:
      - "item"
      summary: "Get all items in the cart"
      description: "Returns all items in the cart"
      operationId: "getCart"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Item"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Items not found"
      security:
      - api_key: []
    delete:
      tags:
      - "item"
      summary: "Delete all items from the cart"
      description: ""
      operationId: "clearCart"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Items not found"
      security:
      - shoppingcart_auth:
        - "write:products"
        - "read:products"
  /checkout:
    get:
      tags:
      - "item"
      summary: "Show total price of the cart"
      description: "Returns the total price of the cart"
      operationId: "checkOut"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "number"
            format: "double"
            example: 300
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      security:
      - api_key: []
securityDefinitions:
  shoppingcart_auth:
    type: "oauth2"
    authorizationUrl: "http://shopping-cart-auth.io/auth-service" 
    flow: "implicit"
    scopes:
      write:products: "modify products in your account"
      read:products: "read your products"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Product:
    type: "object"
    required: 
    - "id"
    - "name"
    - "price"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "phone x"
      price:
        type: "number"
        format: "double"
        example: 25
    xml:
      name: "Product"
  Item:
    type: "object"
    required:
    - "product"
    - "amount"
    properties:
      product:
        type: "object"
        $ref: "#/definitions/Product"
      amount:
        type: "integer"
        format: "int64"
        example: 6
    xml:
      name: "Item"